;; ──────────────────────────────────────────────────────────────────────────
;;  °˖* ૮(  • ᴗ ｡)っ🍸  pewdiepie/archdaemon/dionysh
;;  shhheersh
;;  EWW HUD config, some stuff duct taped, some stuff glued
;;  vers. 1.0
;; ──────────────────────────────────────────────────────────────────────────

;; === Windows ─────────────────────────────────────────────────────────────
(include "./windows/ascii/visualizer_window.yuck") 
(include "windows/ascii/audio_status.yuck")
(include "windows/sys/four_boxes.yuck")
(include "windows/sys/workspace_window_text.yuck")
(include "windows/bar/cpu_ram_storage_bars.yuck")
(include "windows/sys/active_workspace.yuck")
(include "windows/sys/orange_workspace.yuck")
(include "windows/sys/power_cooling_header_text.yuck")
(include "windows/sys/power_mode_text.yuck")
(include "windows/sys/right_fan_data.yuck")
(include "windows/net/ascii_decor_frame.yuck")
(include "windows/net/net_bars.yuck")
(include "windows/net/right_internet_text.yuck")
(include "windows/misc/welcome_text.yuck")

;; === Variables ───────────────────────────────────────────────────────────────
(defvar max_fan_rpm "5000")

(defvar ascii_decor1 "
-                                                 - 
--                                               --
-                                                 - 
--                                               --
-                                                 - 
--                                               --
-                                                 - 
--                                               --
-                                                 - 
--                                               --
-                                                 - 
")

;; === Workspace Status ─────────────────────────────────────────────────────────
(defpoll ws1 :interval "1s" "bash ~/.config/eww/scripts/sys/sys_workspace.sh | grep ws1= | cut -d= -f2 || echo 'null'")
(defpoll ws2 :interval "1s" "bash ~/.config/eww/scripts/sys/sys_workspace.sh | grep ws2= | cut -d= -f2 || echo 'null'")
(defpoll ws3 :interval "1s" "bash ~/.config/eww/scripts/sys/sys_workspace.sh | grep ws3= | cut -d= -f2 || echo 'null'")
(defpoll ws4 :interval "1s" "bash ~/.config/eww/scripts/sys/sys_workspace.sh | grep ws4= | cut -d= -f2 || echo 'null'")
(defpoll current_workspace :interval "0.5s" "hyprctl activeworkspace -j | jq -r '.id' || echo 'null'")

;; === Power & Voltage ─────────────────────────────────────────────────────────
(defpoll gpu_voltage :interval "5s" "bash ~/.config/eww/scripts/sys/sys_gpu_voltage.sh || echo 'null'")
(defpoll cpu_voltage :interval "5s" "bash ~/.config/eww/scripts/sys/sys_cpu_voltage.sh || echo 'null'")
(defpoll dc_voltage  :interval "10s" "bash ~/.config/eww/scripts/sys/sys_dc_voltage.sh || echo 'null'")
(defpoll power_mode  :interval "10s" "bash ~/.config/eww/scripts/sys/sys_power_mode.sh || echo 'null'")
(defpoll power_draw  :interval "5s" "sensors | grep -m 1 'power1:' | awk '{print $2 \" \"$3}' || echo 'N/A'")

;; === CPU & GPU Stats ─────────────────────────────────────────────────────────
(defpoll cpu        :interval "10m" "lscpu | grep 'Model name' | cut -d ':' -f2 | xargs || echo 'null'")
(defpoll gpu        :interval "10m" "lspci | grep -i vga | cut -d ':' -f3 || echo 'null'")

(defpoll cpu_usage  :interval "2s" "top -bn1 | grep 'Cpu(s)' | awk '{print int($2 + $4)}' || echo 'null'")
(defpoll cpu_bar    :interval "2s" "bash ~/.config/eww/scripts/bar/bar_render.sh $(top -bn1 | grep 'Cpu(s)' | awk '{print int($2 + $4)}') || echo 'null'")
(defpoll gpu_usage  :interval "2s" "nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits || echo 'N/A'")

(defpoll cpu_temp   :interval "5s" "sensors | grep 'Tctl' | awk '{print $2}' || echo 'N/A'")
(defpoll gpu_temp   :interval "5s" "nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits || echo 'N/A'")

;; Fan RPM values
(defpoll cpu_fan_rpm :interval "5s" "sensors | grep -i 'cpu_fan' | awk '{print $2 \" RPM\"}' || echo 'null'")
(defpoll gpu_fan_rpm :interval "5s" "sensors | grep -i 'gpu_fan' | awk '{print $2 \" RPM\"}' || echo 'null'")

;; Fan ASCII spinners
(defpoll cpu_fan_ascii :interval "0.2s" "bash ~/.config/eww/scripts/sys/sys_fan_spin.sh cpu || echo 'null'")
(defpoll gpu_fan_ascii :interval "0.2s" "bash ~/.config/eww/scripts/sys/sys_fan_spin.sh gpu || echo 'null'")

;; === Memory & Storage ─────────────────────────────────────────────────────────
(defpoll ram_info    :interval "5s" "free -h | awk '/Mem:/ {print $3\" / \"$2}' || echo 'null'")
(defpoll ram_percent :interval "5s" "free | awk '/Mem:/ {printf \"%d\", $3/$2 * 100}' || echo 'null'")
(defpoll ram_bar     :interval "5s" "bash ~/.config/eww/scripts/bar/bar_render.sh $(free | awk '/Mem:/ {printf(\"%.0f\", $3/$2 * 100)}') || echo 'null'")
(defpoll ram         :interval "5s" "free -h | awk '/Mem:/ {print $3 \"/\" $2}' || echo 'null'")

(defpoll disk            :interval "10s" "df -h / | awk 'NR==2 {print $3 \"/\" $2}' || echo 'null'")
(defpoll storage_percent :interval "5s" "df / | awk 'NR==2 {print int($3*100/$2)}' || echo 'null'")
(defpoll storage_bar     :interval "5s" "bash ~/.config/eww/scripts/bar/bar_render.sh $(df / | awk 'NR==2 {print int($3*100/$2)}') || echo 'null'")

;; === Networking ───────────────────────────────────────────────────────────────
(defpoll upload_speed   :interval "3s" "bash ~/.config/eww/scripts/net/net_upload.sh || echo 'null'")
(defpoll upload_bar     :interval "3s" "bash ~/.config/eww/scripts/net/net_upload.sh | xargs bash ~/.config/eww/scripts/net/net_upload_bar.sh || echo 'null'")

(defpoll download_speed :interval "3s" "bash ~/.config/eww/scripts/net/net_download.sh || echo 'null'")
(defpoll download_bar   :interval "3s" "bash ~/.config/eww/scripts/net/net_download.sh | xargs bash ~/.config/eww/scripts/net/net_download_bar.sh || echo 'null'")

(defpoll ping_ms        :interval "5s" "bash ~/.config/eww/scripts/net/net_ping.sh || echo 'null'")
(defpoll ping_bar       :interval "5s" "bash ~/.config/eww/scripts/net/net_ping.sh | xargs bash ~/.config/eww/scripts/net/net_ping_latency.sh || echo 'null'")

(defpoll vpn_status_text :interval "5s" "bash ~/.config/eww/scripts/net/net_vpn_status.sh || echo 'null'")
(defpoll vpn_bar         :interval "5s" "bash ~/.config/eww/
scripts/net/net_vpn.sh | xargs bash ~/.config/eww/scripts/net/net_vpn_bar.sh || echo 'null'")

;; === Time & Date ───────────────────────────────────────────────────────────────
(defpoll welcome_date     :interval "30s" "date '+%A, %d %B %Y' || echo 'null'")
(defpoll weekday_str      :interval "10s" "date +%A || echo 'null'")
(defpoll datetime_str     :interval "10s" "date '+%H:%M • %d %B %Y' || echo 'null'")
(defpoll weather_forecast :interval "30m" "curl -s 'wttr.in?format=%C+%t' || echo 'N/A'")

;; === System Info ───────────────────────────────────────────────────────────────
(defpoll os            :interval "10m" "uname -o || echo 'null'")
(defpoll desktop       :interval "10m" "echo $XDG_CURRENT_DESKTOP || echo 'null'")
(defpoll wm            :interval "10m" "echo $XDG_SESSION_TYPE || echo 'null'")
(defpoll shell         :interval "10m" "basename $SHELL || echo 'null'")
(defpoll USER          :interval "10m" "whoami || echo 'null'")

(defpoll install-age   :interval "1h" "uptime -s | xargs -I{} date -d {} +%s | xargs -I{} echo $(( ($(date +%s) - {}) / 86400 ))' days' || echo 'null'")
(defpoll since-boot    :interval "5s" "uptime -s || echo 'null'")
(defpoll uptime_full   :interval "0.5s" "awk '{sec=int($1); ms=substr(sprintf(\"%.3f\", $1 - sec), 3); printf \"%02d:%02d:%02d.%s\\n\", sec/3600, (sec%3600)/60, sec%60, ms}' /proc/uptime || echo 'null'")
(defpoll centered-name :interval "10m" "echo $USER@$(hostname) || echo 'null'")

(defpoll battery_time :interval "10s"
  "upower -i $(upower -e | grep BAT) 2>/dev/null | awk '
    /state:/ { state = $2 }
    /time to empty/ { print $4 \" \"$5 }
    /time to full/ { full = $4 \" \"$5 }
    END {
      if (state == \"discharging\") exit 0;
      else if (state == \"charging\") print \"Re-establishing\";
      else print \"N/A\"
    }' || echo 'null'")

;; === ASCII Widgets & Feeds ===
(defpoll visualizer_gen     :interval "0.2s" "cat /tmp/visualizer.txt || echo 'null'")
(defpoll visualizer_content :interval "0.2s" "cat /tmp/visualizer.txt || echo '----------------------------standby--------------------------'")

(defpoll reactor_gen   :interval "0.5s" "cat /tmp/reactor_frame.txt || echo 'null'")
(defpoll reactor_ascii :interval "0.5s" "cat /tmp/reactor_frame.txt || echo 'standby'")

(defpoll reactor_core_layout :interval "1s" "bash ~/.config/eww/scripts/ascii/ascii_core_layout.sh && cat /tmp/core_layout.txt || echo 'standby'")

(defpoll live_log_gen :interval "5s" "bash ~/.config/eww/scripts/ascii/ascii_live_log.sh || echo 'null'")
(defpoll live_text    :interval "5s" "cat /tmp/live_text.txt || echo '--------------…'")

(defpoll ascii_audio_status :interval "2s" "bash ~/.config/eww/scripts/audio/audio_cava_status.sh || echo 'null'")

;; === Widgets ────────────────────────────────────────────────────────────────────
(defwidget audio-visualizer []
  (box :class "outer-frame"
    (box :class "inner-frame"
      (box :class "visualizer-container"
        (label
          :text visualizer_content
          :markup true
          :class "visualizer-text")))))

